#mấy cái nì tự tìm hiểu

-optimizationpasses 5

-dontusemixedcaseclassnames

-dontskipnonpubliclibraryclasses

-dontpreverify

-verbose

#đổi tên tất cả các class  thành 1 ký tự đơn như a, b, c...

-repackageclasses ''

-optimizations !code/simplification/arithmetic,!field/*,!class/merging/*

#Giữ lại các chú thích nếu muốn

-keepattributes *Annotation*

# Giữ lại nguyên bản các đối tượng như Activity, Application...

-keep public class * extends android.app.Activity

-keep public class * extends android.app.Application

-keep public class * extends android.app.Service

-keep public class * extends android.content.BroadcastReceiver

-keep public class * extends android.content.ContentProvider

-keep public class * extends android.app.backup.BackupAgentHelper

-keep public class * extends android.preference.Preference

-keep public class com.android.vending.licensing.ILicensingService

#Nếu bạn nào có sử dụng thuộc tính onClick khi thiết kế giao diện thì nên giữ lại nhé

-keepclassmembers class * {

    public void actionSearch(android.view.View);

    public void actionAFeature(android.view.View);

    public void actionBFeature(android.view.View);

}

#Để duy trì các thành phần tùy chỉnh tên được sử dụng trên bố trí XML

#-keep public class custom.components.package.and.name.**

#Xóa tất cả các Log.v(), Log.i()...

#-assumenosideeffects class android.util.Log {

#    public static *** d(...);

#    public static *** v(...);

#    public static *** w(...);

#}

# giữ lại các native code

-keepclasseswithmembernames class * {

    native <methods>;

}

#giữ lại các hàm khởi tạo có cấu trúc như dưới - (khi custom layout sẽ rõ ngay )

-keepclasseswithmembers class * {

    public <init>(android.content.Context, android.util.AttributeSet);

}

#giữ lại các hàm khởi tạo có cấu trúc như dưới

-keepclasseswithmembers class * {

    public <init>(android.content.Context, android.util.AttributeSet, int);

}

#giữ lại các phương thức public void * (tự hiểu nhé)

-keepclassmembers class * extends android.app.Activity {

   public void *(android.view.View);

}

# Giữ lại các enum (cái nì thường dùng để trừu tượng hóa các giá trị)

-keepclassmembers enum * {

    public static **[] values();

    public static ** valueOf(java.lang.String);

}

#giữ lại Parcelable  nếu có một lớp nào implements  nó

-keep class * implements android.os.Parcelable {

  public static final android.os.Parcelable$Creator *;

}

#Giữ lại các id nằm trong R

-keepclassmembers class **.R$* {

    public static <fields>;

}

#Giữ lại phương thức callback.(mypackage là tên gói )

#-keep class mypackage.MyCallbackClass {

#   void myCallbackMethod(java.lang.String);

#}

#giữ lại Serializable nếu có một lớp nào implements  nó

#-keepclassmembers class * implements java.io.Serializable {

#    private static final java.io.ObjectStreamField[] serialPersistentFields;

#    private void writeObject(java.io.ObjectOutputStream);

#    private void readObject(java.io.ObjectInputStream);

#    java.lang.Object writeReplbạn();

#    java.lang.Object readResolve();

#}